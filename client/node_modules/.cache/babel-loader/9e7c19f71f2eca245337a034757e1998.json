{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\obasanmi temitope\\\\Desktop\\\\findWork\\\\client\\\\src\\\\components\\\\postJobs.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass PostJobs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      company: '',\n      industry: '',\n      location: '',\n      qualification: '',\n      experience: '',\n      job_level: '',\n      job_summary: '',\n      job_description: '',\n      job_title: '',\n      employer_id: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.clearInputField = () => {\n      this.setState({\n        company: '',\n        industry: '',\n        location: '',\n        qualification: '',\n        experience: '',\n        job_level: '',\n        job_summary: '',\n        job_description: '',\n        job_title: ''\n      });\n    };\n\n    this.handleSubmit = async e => {\n      const {\n        industry,\n        location,\n        qualification,\n        experience,\n        job_level,\n        job_summary,\n        job_description,\n        job_title,\n        company\n      } = this.state;\n      e.preventDefault();\n\n      if (company, industry, location, qualification, experience, job_level, job_summary, job_description, job_title === '') {\n        alert('fill out the empty fields');\n      } else {\n        let h = new Headers();\n        let token = localStorage.getItem('token');\n        h.append('Authorization', `Bearer ${token}`);\n        await fetch(`http://localhost:3001/jobs/addjobs`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state)\n        }).then(response => response.json()).then(jsonResponse => {\n          console.log('response', jsonResponse.message);\n\n          if (jsonResponse.message === 'created successfully') {\n            alert('You have posted a job successfully');\n            this.clearInputField();\n          } else {\n            alert('Failed to post a job');\n            this.clearInputField();\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      handleChange\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postJobWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"postJobHeader\",\n          children: \" Post a Job \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"company\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter name of hiring company \",\n            required: true,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"industry\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter industry e.g IT\",\n            required: true,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter location of job\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"qualification\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter quaalification required\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"experience\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter years of experience required\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"job_level\",\n            className: \"form-control postJobInput\",\n            placeholder: \"full-time/part-time\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"job_summary\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter job summary\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"job_description\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter job description\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"job_title\",\n            className: \"form-control postJobInput\",\n            placeholder: \"enter title of job e.g front-end developer\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success postButton\",\n            onClick: handleSubmit,\n            children: \"Post \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 64\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(PostJobs);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/obasanmi temitope/Desktop/findWork/client/src/components/postJobs.js"],"names":["React","Component","withRouter","PostJobs","state","company","industry","location","qualification","experience","job_level","job_summary","job_description","job_title","employer_id","handleChange","e","setState","target","name","value","console","log","clearInputField","handleSubmit","preventDefault","alert","h","Headers","token","localStorage","getItem","append","fetch","method","headers","body","JSON","stringify","then","response","json","jsonResponse","message","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PostJobs extends Component {\r\n    state = {\r\n        company: '',\r\n        industry: '',\r\n        location: '',\r\n        qualification: '',\r\n        experience: '',\r\n        job_level: '',\r\n        job_summary: '',\r\n        job_description: '',\r\n        job_title: '',\r\n        employer_id: '',\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        console.log(this.state);\r\n    };\r\n\r\n    // method to clear input field after submission of form \r\n    clearInputField = () => {\r\n        this.setState({\r\n            company: '',\r\n            industry: '',\r\n            location: '',\r\n            qualification: '',\r\n            experience: '',\r\n            job_level: '',\r\n            job_summary: '',\r\n            job_description: '',\r\n            job_title: '',\r\n        })\r\n    };\r\n\r\n    handleSubmit = async(e) => {\r\n        const {\r\n            industry,\r\n            location,\r\n            qualification,\r\n            experience,\r\n            job_level,\r\n            job_summary,\r\n            job_description,\r\n            job_title,\r\n            company\r\n        } = this.state;\r\n        e.preventDefault();\r\n        if (\r\n            (company, industry, location, qualification, experience, job_level, job_summary, job_description, job_title === '')\r\n        ) {\r\n            alert('fill out the empty fields');\r\n        } else {\r\n            let h = new Headers();\r\n            let token = localStorage.getItem('token')\r\n            h.append('Authorization', `Bearer ${token}`)\r\n            await fetch(`http://localhost:3001/jobs/addjobs`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(this.state),\r\n                })\r\n                .then((response) => response.json())\r\n                .then((jsonResponse) => {\r\n                    console.log('response', jsonResponse.message);\r\n                    if (jsonResponse.message === 'created successfully') {\r\n                        alert('You have posted a job successfully');\r\n                        this.clearInputField()\r\n                    } else {\r\n                        alert('Failed to post a job');\r\n                        this.clearInputField()\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    };\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        return ( <\r\n            div className = \"postJobWrapper\" >\r\n            <\r\n            div className = \"formContainer\" >\r\n            <\r\n            h3 className = \"postJobHeader\" > Post a Job < /h3> <\r\n            form >\r\n            <\r\n            input type = \"text\"\r\n            name = \"company\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter name of hiring company \"\r\n            required onChange = { handleChange }\r\n            /> <\r\n            input type = \"text\"\r\n            name = \"industry\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter industry e.g IT\"\r\n            required onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            input type = \"text\"\r\n            name = \"location\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter location of job\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            input type = \"text\"\r\n            name = \"qualification\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter quaalification required\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            input type = \"text\"\r\n            name = \"experience\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter years of experience required\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            input type = \"text\"\r\n            name = \"job_level\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"full-time/part-time\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            textarea name = \"job_summary\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter job summary\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            textarea name = \"job_description\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter job description\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            input type = \"text\"\r\n            name = \"job_title\"\r\n            className = \"form-control postJobInput\"\r\n            placeholder = \"enter title of job e.g front-end developer\"\r\n            onChange = { handleChange }\r\n            /> <\r\n            br / >\r\n            <\r\n            button className = \"btn btn-success postButton\"\r\n            onClick = { handleSubmit } >\r\n            Post <\r\n            /button> <\r\n            /form> <\r\n            /div> <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(PostJobs)"]},"metadata":{},"sourceType":"module"}